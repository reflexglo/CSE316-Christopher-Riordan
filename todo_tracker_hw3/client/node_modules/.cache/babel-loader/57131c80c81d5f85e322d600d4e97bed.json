{"ast":null,"code":"var _jsxFileName = \"C:\\\\CSE316-Spring21-HW3-main\\\\client\\\\src\\\\components\\\\modals\\\\Login.js\";\nimport React, { useState } from 'react';\nimport { LOGIN } from '../../cache/mutations';\nimport { useMutation } from '@apollo/client';\nimport { WModal, WMHeader, WMMain, WMFooter, WButton, WInput } from 'wt-frontend';\n\nconst Login = props => {\n  const [input, setInput] = useState({\n    email: '',\n    password: ''\n  });\n  const [loading, toggleLoading] = useState(false);\n  const [showErr, displayErrorMsg] = useState(false);\n  const errorMsg = \"Email/Password not found.\";\n  const [Login] = useMutation(LOGIN);\n\n  const updateInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const updated = { ...input,\n      [name]: value\n    };\n    setInput(updated);\n  };\n\n  const handleLogin = async e => {\n    const {\n      loading,\n      error,\n      data\n    } = await Login({\n      variables: { ...input\n      }\n    });\n\n    if (loading) {\n      toggleLoading(true);\n    }\n\n    ;\n\n    if (data.login._id === null) {\n      displayErrorMsg(true);\n      return;\n    }\n\n    if (data) {\n      props.fetchUser();\n      props.refetchTodos();\n      toggleLoading(false);\n      props.setShowLogin(false);\n    }\n\n    ;\n  };\n\n  return (\n    /*#__PURE__*/\n    // Replace div with WModal\n    React.createElement(WModal, {\n      className: \"login-modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(WMHeader, {\n      className: \"modal-header\",\n      onClose: () => props.setShowLogin(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 4\n      }\n    }, \"Login\"), loading ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(WMMain, {\n      className: \"main-login-modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(WInput, {\n      className: \"modal-input\",\n      onBlur: updateInput,\n      name: \"email\",\n      labelAnimation: \"up\",\n      barAnimation: \"solid\",\n      labelText: \"Email Address\",\n      wType: \"outlined\",\n      inputType: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-spacer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(WInput, {\n      className: \"modal-input\",\n      onBlur: updateInput,\n      name: \"password\",\n      labelAnimation: \"up\",\n      barAnimation: \"solid\",\n      labelText: \"Password\",\n      wType: \"outlined\",\n      inputType: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }), showErr ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 18\n      }\n    }, errorMsg) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, \"\\xA0\")), /*#__PURE__*/React.createElement(WMFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(WButton, {\n      className: \"modal-button\",\n      onClick: handleLogin,\n      span: true,\n      clickAnimation: \"ripple-light\",\n      hoverAnimation: \"darken\",\n      shape: \"rounded\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }\n    }, \"Login\")))\n  );\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/CSE316-Spring21-HW3-main/client/src/components/modals/Login.js"],"names":["React","useState","LOGIN","useMutation","WModal","WMHeader","WMMain","WMFooter","WButton","WInput","Login","props","input","setInput","email","password","loading","toggleLoading","showErr","displayErrorMsg","errorMsg","updateInput","e","name","value","target","updated","handleLogin","error","data","variables","login","_id","fetchUser","refetchTodos","setShowLogin"],"mappings":"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","sourcesContent":["import React, { useState } \tfrom 'react';\nimport { LOGIN } \t\t\tfrom '../../cache/mutations';\nimport { useMutation }    \tfrom '@apollo/client';\n\nimport { WModal, WMHeader, WMMain, WMFooter, WButton, WInput } from 'wt-frontend';\n\nconst Login = (props) => {\n\tconst [input, setInput] = useState({ email: '', password: '' });\n\tconst [loading, toggleLoading] = useState(false);\n\tconst [showErr, displayErrorMsg] = useState(false);\n\tconst errorMsg = \"Email/Password not found.\";\n\tconst [Login] = useMutation(LOGIN);\n\n\tconst updateInput = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tconst updated = { ...input, [name]: value };\n\t\tsetInput(updated);\n\t}\n\n\tconst handleLogin = async (e) => {\n\n\t\tconst { loading, error, data } = await Login({ variables: { ...input } });\n\t\tif (loading) { toggleLoading(true) };\n\t\tif (data.login._id === null) {\n\t\t\tdisplayErrorMsg(true);\n\t\t\treturn;\n\t\t}\n\t\tif (data) {\n\t\t\tprops.fetchUser();\n\t\t\tprops.refetchTodos();\n\t\t\ttoggleLoading(false)\n\t\t\tprops.setShowLogin(false)\n\t\t};\n\t};\n\n\n\treturn (\n        // Replace div with WModal\n\n\t\t<WModal className=\"login-modal\">\n\t\t\t<WMHeader className=\"modal-header\" onClose={() => props.setShowLogin(false)}>\n\t\t\t\tLogin\n\t\t\t</WMHeader>\n\n\t\t\t{\n\t\t\t\tloading ? <div />\n\t\t\t\t\t: <WMMain className=\"main-login-modal\">\n\n\t\t\t\t\t\t<WInput className=\"modal-input\" onBlur={updateInput} name='email' labelAnimation=\"up\" barAnimation=\"solid\" labelText=\"Email Address\" wType=\"outlined\" inputType='text' />\n\t\t\t\t\t\t<div className=\"modal-spacer\">&nbsp;</div>\n\t\t\t\t\t\t<WInput className=\"modal-input\" onBlur={updateInput} name='password' labelAnimation=\"up\" barAnimation=\"solid\" labelText=\"Password\" wType=\"outlined\" inputType='password' />\n\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tshowErr ? <div className='modal-error'>\n\t\t\t\t\t\t\t\t{errorMsg}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t: <div className='modal-error'>&nbsp;</div>\n\t\t\t\t\t\t}\n\n\t\t\t\t\t</WMMain>\n\t\t\t}\n\t\t\t<WMFooter>\n\t\t\t\t<WButton className=\"modal-button\" onClick={handleLogin} span clickAnimation=\"ripple-light\" hoverAnimation=\"darken\" shape=\"rounded\" color=\"primary\">\n\t\t\t\t\tLogin\n\t\t\t\t</WButton>\n\t\t\t</WMFooter>\n\t\t</WModal>\n\t);\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}