[{"C:\\hw2\\src\\index.js":"1","C:\\hw2\\src\\App.js":"2","C:\\hw2\\src\\reportWebVitals.js":"3","C:\\hw2\\src\\components\\Navbar.js":"4","C:\\hw2\\src\\components\\Workspace.js":"5","C:\\hw2\\src\\components\\LeftSidebar.js":"6","C:\\hw2\\src\\common\\jsTPS.js":"7","C:\\hw2\\src\\components\\ToDoItem.js":"8","C:\\hw2\\src\\components\\ListLink.js":"9","C:\\hw2\\src\\AddNewItem_Transaction.js":"10","C:\\hw2\\src\\MoveUp_Transaction.js":"11","C:\\hw2\\src\\MoveDown_Transaction.js":"12","C:\\hw2\\src\\CloseItem_Transaction.js":"13","C:\\hw2\\src\\components\\TaskForm.js":"14","C:\\hw2\\src\\ChangeTask_Transaction.js":"15","C:\\hw2\\src\\ChangeDate_Transaction.js":"16","C:\\hw2\\src\\components\\DateForm.js":"17","C:\\hw2\\src\\ChangeStatus_Transaction.js":"18","C:\\hw2\\src\\components\\StatusForm.js":"19","C:\\hw2\\src\\components\\ListTitle.js":"20"},{"size":557,"mtime":1615306827219,"results":"21","hashOfConfig":"22"},{"size":10027,"mtime":1615744301801,"results":"23","hashOfConfig":"22"},{"size":375,"mtime":1615306827219,"results":"24","hashOfConfig":"22"},{"size":431,"mtime":1615306827216,"results":"25","hashOfConfig":"22"},{"size":5513,"mtime":1615510707420,"results":"26","hashOfConfig":"22"},{"size":1687,"mtime":1615508918026,"results":"27","hashOfConfig":"22"},{"size":6712,"mtime":1615306827215,"results":"28","hashOfConfig":"22"},{"size":5075,"mtime":1615477508016,"results":"29","hashOfConfig":"22"},{"size":1422,"mtime":1615744265593,"results":"30","hashOfConfig":"22"},{"size":824,"mtime":1615409880965,"results":"31","hashOfConfig":"22"},{"size":568,"mtime":1615411563316,"results":"32","hashOfConfig":"22"},{"size":568,"mtime":1615411794768,"results":"33","hashOfConfig":"22"},{"size":825,"mtime":1615412362341,"results":"34","hashOfConfig":"22"},{"size":625,"mtime":1615437041755,"results":"35","hashOfConfig":"22"},{"size":1444,"mtime":1615436986101,"results":"36","hashOfConfig":"22"},{"size":1432,"mtime":1615475309970,"results":"37","hashOfConfig":"22"},{"size":665,"mtime":1615480598382,"results":"38","hashOfConfig":"22"},{"size":1442,"mtime":1615476529599,"results":"39","hashOfConfig":"22"},{"size":1195,"mtime":1615476756130,"results":"40","hashOfConfig":"22"},{"size":587,"mtime":1615509218790,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"ym0iot",{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"92","usedDeprecatedRules":"44"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"44"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"44"},"C:\\hw2\\src\\index.js",[],["99","100"],"C:\\hw2\\src\\App.js",["101","102","103","104"],"C:\\hw2\\src\\reportWebVitals.js",[],"C:\\hw2\\src\\components\\Navbar.js",["105"],"// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport React, { Component } from 'react'\r\n\r\nclass Navbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"navbar\">\r\n                <div id=\"title-div\">\r\n                    Todo Tracker\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","C:\\hw2\\src\\components\\Workspace.js",["106","107"],"// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport React, { Component } from 'react'\r\nimport ToDoItem from './ToDoItem'\r\nimport Undo from '@material-ui/icons/Undo';\r\nimport Redo from '@material-ui/icons/Redo';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport Delete from '@material-ui/icons/Delete';\r\nimport Close from '@material-ui/icons/Close';\r\nimport Hotkeys from 'react-hot-keys';\r\n\r\nclass Workspace extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    undoShortCut = () => {\r\n        this.props.undoCallBack();\r\n        this.forceUpdate();\r\n    }\r\n    redoShortCut = () => {\r\n        this.props.redoCallBack();\r\n        this.forceUpdate();\r\n    }\r\n    render() {\r\n        if(this.props.currentToDoList.id!=undefined){\r\n            return (\r\n                <div id=\"workspace\">\r\n                    <div id=\"todo-list-header-card\" className=\"list-item-card\">\r\n                        <div id=\"task-col-header\" className=\"item-col todo-button\">Task</div>\r\n                        <div id=\"date-col-header\" className=\"item-col todo-button\">Due Date</div>\r\n                        <div id=\"status-col-header\" className=\"item-col todo-button\">Status</div>\r\n                        <div className=\"item-col\" display=\"flex\" flexDirection=\"row\" flexWrap=\"nowrap\">\r\n                            <Hotkeys \r\n                                keyName=\"ctrl+z\" \r\n                                onKeyDown={this.undoShortCut}\r\n                            >\r\n                            </Hotkeys>\r\n                            <Hotkeys \r\n                                keyName=\"ctrl+y\" \r\n                                onKeyDown={this.redoShortCut}\r\n                            >\r\n                            </Hotkeys>\r\n                            <Undo value={this.props.undoStatus()} id=\"undo-button\" className=\"material-icons\" onClick={this.props.undoCallBack}/>\r\n                            <Redo value={this.props.redoStatus()} id=\"redo-button\" className=\"material-icons\" onClick={this.props.redoCallBack}/>\r\n                            <AddBox id=\"add-item-button\" className=\"list-item-control material-icons todo-button\" onClick={this.props.addNewItemCallBack}/>\r\n                            <Delete id=\"delete-list-button\" className=\"list-item-control material-icons todo-button\" onClick={this.props.deleteListCallBack}/>\r\n                            <Close id=\"close-list-button\" className=\"list-item-control material-icons todo-button\" onClick={this.props.closeListCallBack}/>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"todo-list-items-div\">\r\n                    {\r\n                        this.props.toDoListItems.map((toDoListItem) => (\r\n                        <ToDoItem\r\n                            index={this.props.toDoListItems.indexOf(toDoListItem)}\r\n                            listLength={this.props.toDoListItems.length}\r\n                            key={toDoListItem.id}\r\n                            toDoListItem={toDoListItem}     // PASS THE ITEM TO THE CHILDREN\r\n                            moveUpItemCallBack={this.props.moveUpItemCallBack}\r\n                            moveDownItemCallBack={this.props.moveDownItemCallBack}\r\n                            closeItemCallBack={this.props.closeItemCallBack}\r\n                            changeTaskCallBack={this.props.changeTaskCallBack}\r\n                            changeDateCallBack={this.props.changeDateCallBack}\r\n                            changeStatusCallBack={this.props.changeStatusCallBack}\r\n                        />))\r\n                    }\r\n                </div>\r\n                <br />\r\n            </div>\r\n        );\r\n        }\r\n        else{\r\n            return (\r\n                <div id=\"workspace\">\r\n                    <div id=\"todo-list-header-card\" className=\"list-item-card\">\r\n                        <div id=\"task-col-header\" className=\"item-col todo-button\">Task</div>\r\n                        <div id=\"date-col-header\" className=\"item-col todo-button\">Due Date</div>\r\n                        <div id=\"status-col-header\" className=\"item-col todo-button\">Status</div>\r\n                        <div className=\"item-col\" display=\"flex\" flexDirection=\"row\" flexWrap=\"nowrap\">\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"todo-list-items-div\">\r\n                    {\r\n                        this.props.toDoListItems.map((toDoListItem) => (\r\n                        <ToDoItem\r\n                            index={this.props.toDoListItems.indexOf(toDoListItem)}\r\n                            listLength={this.props.toDoListItems.length}\r\n                            key={toDoListItem.id}\r\n                            toDoListItem={toDoListItem}     // PASS THE ITEM TO THE CHILDREN\r\n                            moveUpItemCallBack={this.props.moveUpItemCallBack}\r\n                            moveDownItemCallBack={this.props.moveDownItemCallBack}\r\n                            closeItemCallBack={this.props.closeItemCallBack}\r\n                            changeTaskCallBack={this.props.changeTaskCallBack}\r\n                            changeDateCallBack={this.props.changeDateCallBack}\r\n                            changeStatusCallBack={this.props.changeStatusCallBack}\r\n                        />))\r\n                    }\r\n                </div>\r\n                <br />\r\n            </div>\r\n        );\r\n        }\r\n        \r\n                \r\n    }\r\n}\r\n\r\nexport default Workspace;","C:\\hw2\\src\\components\\LeftSidebar.js",["108"],"// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport React, { Component } from 'react';\r\nimport ListLink from './ListLink'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\n\r\nclass LeftSidebar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleAddNewList = () => {\r\n        this.props.addNewListCallback();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"left-sidebar\">\r\n                <div id=\"left-sidebar-header\" class=\"section-header\">\r\n                    <span class=\"left-sidebar-header-text\">Todolists</span>\r\n                    <span class=\"left-sidebar-controls\" id=\"add-undo-redo-box\">\r\n                        <AddBox \r\n                            id=\"add-list-button\"\r\n                            className=\"material-icons todo_button\"\r\n                            onClick={this.handleAddNewList} />\r\n                    </span>\r\n                </div>\r\n                <div id=\"todo-lists-list\">\r\n                {\r\n                    this.props.toDoLists.map((toDoList) => (\r\n                        <ListLink\r\n                            key={toDoList.id}\r\n                            selectedList={this.props.selectedList}\r\n                            changeListTitleCallBack={this.props.changeListTitleCallBack}\r\n                            toDoList={toDoList}                                // PASS THE LIST TO THE CHILDREN\r\n                            loadToDoListCallback={this.props.loadToDoListCallback} />  // PASS THE CALLBACK TO THE CHILDREN\r\n                    ))\r\n                }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LeftSidebar;","C:\\hw2\\src\\common\\jsTPS.js",["109","110"],"'use strict'\r\n\r\n/**\r\n * jsTPS_Transaction\r\n * \r\n * This provides the basic structure for a transaction class. Note to use\r\n * jsTPS one should create objects that define these two methods, doTransaction\r\n * and undoTransaction, which will update the application state accordingly.\r\n * \r\n * @author THE McKilla Gorilla (accept no imposters)\r\n * @version 1.0\r\n */\r\nexport class jsTPS_Transaction {\r\n    /**\r\n     * This method is called by jTPS when a transaction is executed.\r\n     */\r\n    doTransaction() {\r\n        console.log(\"doTransaction - MISSING IMPLEMENTATION\");\r\n    }\r\n    \r\n    /**\r\n     * This method is called by jTPS when a transaction is undone.\r\n     */\r\n    undoTransaction() {\r\n        console.log(\"undoTransaction - MISSING IMPLEMENTATION\");\r\n    }\r\n}\r\n\r\n/**\r\n * jsTPS\r\n * \r\n * This class serves as the Transaction Processing System. Note that it manages\r\n * a stack of jsTPS_Transaction objects, each of which know how to do or undo\r\n * state changes for the given application. Note that this TPS is not platform\r\n * specific as it is programmed in raw JavaScript.\r\n */\r\nexport default class jsTPS {\r\n    constructor() {\r\n        // THE TRANSACTION STACK\r\n        this.transactions = [];\r\n\r\n        // THE TOTAL NUMBER OF TRANSACTIONS ON THE STACK,\r\n        // INCLUDING THOSE THAT MAY HAVE ALREADY BEEN UNDONE\r\n        this.numTransactions = 0;\r\n\r\n        // THE INDEX OF THE MOST RECENT TRANSACTION, NOTE THAT\r\n        // THIS MAY BE IN THE MIDDLE OF THE TRANSACTION STACK\r\n        // IF SOME TRANSACTIONS ON THE STACK HAVE BEEN UNDONE\r\n        // AND STILL COULD BE REDONE.\r\n        this.mostRecentTransaction = -1;\r\n\r\n        // THESE STATE VARIABLES ARE TURNED ON AND OFF WHILE\r\n        // TRANSACTIONS ARE DOING THEIR WORK SO AS TO HELP\r\n        // MANAGE CONCURRENT UPDATES\r\n        this.performingDo = false;\r\n        this.performingUndo = false;\r\n    }\r\n\r\n    /**\r\n     * isPerformingDo\r\n     * \r\n     * Accessor method for getting a boolean representing whether or not\r\n     * a transaction is currently in the midst of a do/redo operation.\r\n     */\r\n    isPerformingDo() {\r\n        return this.performingDo;\r\n    }\r\n\r\n    /**\r\n     * isPerformingUndo\r\n     * \r\n     * Accessor method for getting a boolean representing whether or not\r\n     * a transaction is currently in the midst of an undo operation.\r\n     */\r\n    isPerformingUndo() {\r\n        return this.performingUndo;\r\n    }\r\n\r\n    /**\r\n     * getSize\r\n     * \r\n     * Accessor method for getting the number of transactions on the stack.\r\n     */\r\n    getSize() {\r\n        return this.transactions.length;\r\n    }\r\n\r\n    /**\r\n     * getRedoSize\r\n     * \r\n     * Method for getting the total number of transactions on the stack\r\n     * that can possibly be redone.\r\n     */\r\n    getRedoSize() {\r\n        return this.getSize() - this.mostRecentTransaction - 1;\r\n    }\r\n\r\n    /**\r\n     * getUndoSize\r\n     * \r\n     * Method for getting the total number of transactions on the stack\r\n     * that can possible be undone.\r\n     */\r\n    getUndoSize() {\r\n        return this.mostRecentTransaction + 1;\r\n    }\r\n\r\n    /**\r\n     * hasTransactionToRedo\r\n     * \r\n     * Method for getting a boolean representing whether or not\r\n     * there are transactions on the stack that can be redone.\r\n     */\r\n    hasTransactionToRedo() {\r\n        return (this.mostRecentTransaction+1) < this.numTransactions;\r\n    }\r\n\r\n    /**\r\n     * hasTransactionToUndo\r\n     * \r\n     * Method for getting a boolean representing whehter or not\r\n     * there are transactions on the stack that can be undone.\r\n     */\r\n    hasTransactionToUndo() {\r\n        return this.mostRecentTransaction >= 0;\r\n    }\r\n\r\n    /**\r\n     * addTransaction\r\n     * \r\n     * Method for adding a transaction to the TPS stack, note it\r\n     * also then does the transaction.\r\n     * \r\n     * @param {jsTPS_Transaction} transaction Transaction to add to the stack and do.\r\n     */\r\n    addTransaction(transaction) {\r\n        // ARE WE BRANCHING?\r\n        if ((this.mostRecentTransaction < 0) \r\n            || (this.mostRecentTransaction < (this.transactions.length - 1))) {\r\n                for (let i = this.transactions.length - 1; i > this.mostRecentTransaction; i--) {\r\n                    this.transactions.splice(i, 1);\r\n                }\r\n                this.numTransactions = this.mostRecentTransaction + 2;\r\n        }\r\n        else {\r\n            this.numTransactions++;\r\n        }\r\n\r\n        // ADD THE TRANSACTION\r\n        this.transactions[this.mostRecentTransaction+1] = transaction;\r\n\r\n        // AND EXECUTE IT\r\n        this.doTransaction();\r\n    }\r\n\r\n    /**\r\n     * doTransaction\r\n     * \r\n     * Does the current transaction on the stack and advances the transaction\r\n     * counter. Note this function may be invoked as a result of either adding\r\n     * a transaction (which also does it), or redoing a transaction.\r\n     */\r\n    doTransaction() {\r\n        if (this.hasTransactionToRedo()) {\r\n            this.performingDo = true;\r\n            let transaction = this.transactions[this.mostRecentTransaction+1];\r\n            transaction.doTransaction();\r\n            this.mostRecentTransaction++;\r\n            this.performingDo = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This function gets the most recently executed transaction on the \r\n     * TPS stack and undoes it, moving the TPS counter accordingly.\r\n     */\r\n    undoTransaction() {\r\n        if (this.hasTransactionToUndo()) {\r\n            this.performingUndo = true;\r\n            let transaction = this.transactions[this.mostRecentTransaction];\r\n            transaction.undoTransaction();\r\n            this.mostRecentTransaction--;\r\n            this.performingUndo = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * clearAllTransactions\r\n     * \r\n     * Removes all the transactions from the TPS, leaving it with none.\r\n     */\r\n    clearAllTransactions() {\r\n        // REMOVE ALL THE TRANSACTIONS\r\n        this.transactions = new Array();\r\n        \r\n        // MAKE SURE TO RESET THE LOCATION OF THE\r\n        // TOP OF THE TPS STACK TOO\r\n        this.mostRecentTransaction = -1;      \r\n        this.numTransactions = 0; \r\n    }\r\n\r\n    /**\r\n     * toString\r\n     * \r\n     * Builds and returns a textual represention of the full TPS and its stack.\r\n     */\r\n    toString() {        \r\n        let text = \"--Number of Transactions: \" + this.numTransactions + \"\\n\";\r\n        text += \"--Current Index on Stack: \" + this.mostRecentTransaction + \"\\n\";\r\n        text += \"--Current Transaction Stack:\\n\";\r\n        for (let i = 0; i <= this.mostRecentTransaction; i++) {\r\n            let jT = this.transactions[i];\r\n            text += \"----\" + jT.toString() + \"\\n\";\r\n        }\r\n        return text;        \r\n    }\r\n}","C:\\hw2\\src\\components\\ToDoItem.js",["111","112","113"],"// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport React, { Component } from 'react'\r\nimport KeyboardArrowUp from '@material-ui/icons/KeyboardArrowUp';\r\nimport KeyboardArrowDown from '@material-ui/icons/KeyboardArrowDown';\r\nimport Close from '@material-ui/icons/Close';\r\nimport TaskForm from './TaskForm'\r\nimport DateForm from './DateForm'\r\nimport StatusForm from './StatusForm'\r\n\r\nclass ToDoItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        // DISPLAY WHERE WE ARE\r\n        console.log(\"\\t\\t\\tToDoItem \" + this.props.toDoListItem.id + \" constructor\");\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        // DISPLAY WHERE WE ARE\r\n        console.log(\"\\t\\t\\tToDoItem \" + this.props.toDoListItem.id + \" did mount\");\r\n    }\r\n    moveThisItemUp = () => {\r\n        this.props.moveUpItemCallBack(this.props.toDoListItem);\r\n    }\r\n    moveThisItemDown = () => {\r\n        this.props.moveDownItemCallBack(this.props.toDoListItem);\r\n    }\r\n    closeItem = () => {\r\n        this.props.closeItemCallBack(this.props.toDoListItem);\r\n    }\r\n    render() {\r\n        // DISPLAY WHERE WE ARE\r\n        console.log(\"\\t\\t\\tToDoItem render\");\r\n        let listItem = this.props.toDoListItem;\r\n        let statusType = \"status-complete\";\r\n        if (listItem.status === \"incomplete\")\r\n            statusType = \"status-incomplete\";\r\n        if(this.props.index == 0){\r\n            return (\r\n                <div id={'todo-list-item-' + listItem.id} className='list-item-card'>\r\n                    <TaskForm changeTaskCallBack={this.props.changeTaskCallBack} itemChanged={this.props.toDoListItem} task={listItem.description}></TaskForm>\r\n                    <DateForm changeDateCallBack={this.props.changeDateCallBack} itemChanged={this.props.toDoListItem} date={listItem.due_date}></DateForm>\r\n                    <StatusForm changeStatusCallBack={this.props.changeStatusCallBack} itemChanged={this.props.toDoListItem} status={listItem.status}></StatusForm>\r\n                    <div className='item-col test-4-col'></div>\r\n                    <div className='item-col list-controls-col'>\r\n                        <KeyboardArrowDown className='list-item-control todo-button' onClick={this.moveThisItemDown}/>\r\n                        <Close className='list-item-control todo-button' onClick={this.closeItem}/>\r\n                        <div className='list-item-control'></div>\r\n            <div className='list-item-control'></div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else if(this.props.index==this.props.listLength-1){\r\n            return (\r\n                <div id={'todo-list-item-' + listItem.id} className='list-item-card'>\r\n                    <TaskForm changeTaskCallBack={this.props.changeTaskCallBack} itemChanged={this.props.toDoListItem} task={listItem.description}></TaskForm>\r\n                    <DateForm changeDateCallBack={this.props.changeDateCallBack} itemChanged={this.props.toDoListItem} date={listItem.due_date}></DateForm>\r\n                    <StatusForm changeStatusCallBack={this.props.changeStatusCallBack} itemChanged={this.props.toDoListItem} status={listItem.status}></StatusForm>\r\n                    <div className='item-col test-4-col'></div>\r\n                    <div className='item-col list-controls-col'>\r\n                        <KeyboardArrowUp className='list-item-control todo-button' onClick={this.moveThisItemUp}/>\r\n                        <Close className='list-item-control todo-button' onClick={this.closeItem}/>\r\n                        <div className='list-item-control'></div>\r\n            <div className='list-item-control'></div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <div id={'todo-list-item-' + listItem.id} className='list-item-card'>\r\n                    <TaskForm changeTaskCallBack={this.props.changeTaskCallBack} itemChanged={this.props.toDoListItem} task={listItem.description}></TaskForm>\r\n                    <DateForm changeDateCallBack={this.props.changeDateCallBack} itemChanged={this.props.toDoListItem} date={listItem.due_date}></DateForm>\r\n                    <StatusForm changeStatusCallBack={this.props.changeStatusCallBack} itemChanged={this.props.toDoListItem} status={listItem.status}></StatusForm>\r\n                    <div className='item-col test-4-col'></div>\r\n                    <div className='item-col list-controls-col'>\r\n                        <KeyboardArrowUp className='list-item-control todo-button' onClick={this.moveThisItemUp}/>\r\n                        <KeyboardArrowDown className='list-item-control todo-button' onClick={this.moveThisItemDown}/>\r\n                        <Close className='list-item-control todo-button' onClick={this.closeItem}/>\r\n                        <div className='list-item-control'></div>\r\n            <div className='list-item-control'></div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default ToDoItem;","C:\\hw2\\src\\components\\ListLink.js",["114"],"C:\\hw2\\src\\AddNewItem_Transaction.js",["115"],"'use strict'\r\n\r\n// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport { jsTPS_Transaction } from \"./common/jsTPS.js\"\r\n\r\n// THIS TRANSACTION IS FOR ADDING A NEW ITEM TO A TODO LIST\r\nexport default class AddNewItem_Transaction extends jsTPS_Transaction {\r\n    constructor(initApp) {\r\n        super();\r\n        this.app = initApp;\r\n    }\r\n\r\n    doTransaction() {\r\n        this.itemAdded = this.app.addNewItem();\r\n    }\r\n\r\n    undoTransaction() {\r\n        let thisList = this.app.state.currentList;\r\n        let ind = thisList.items.indexOf(this.itemAdded);\r\n        thisList.items.splice(ind,1);\r\n        this.app.setState({\r\n        toDoLists: this.app.state.toDoLists,\r\n        currentList: thisList,\r\n        nextListId: this.app.state.nextListId\r\n        },this.afterToDoListsChangeComplete);\r\n    }\r\n}","C:\\hw2\\src\\MoveUp_Transaction.js",["116"],"'use strict'\r\n\r\n// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport { jsTPS_Transaction } from \"./common/jsTPS.js\"\r\n\r\n// THIS TRANSACTION IS FOR ADDING A NEW ITEM TO A TODO LIST\r\nexport default class DeleteList_Transaction extends jsTPS_Transaction {\r\n    constructor(initApp,thisItem) {\r\n        super();\r\n        this.app = initApp;\r\n        this.item = thisItem;\r\n    }\r\n\r\n    doTransaction() {\r\n        // MAKE A NEW ITEM\r\n        this.app.moveUp(this.item);\r\n    }\r\n\r\n    undoTransaction() {\r\n        this.app.moveDown(this.item);\r\n    }\r\n}","C:\\hw2\\src\\MoveDown_Transaction.js",["117"],"'use strict'\r\n\r\n// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport { jsTPS_Transaction } from \"./common/jsTPS.js\"\r\n\r\n// THIS TRANSACTION IS FOR ADDING A NEW ITEM TO A TODO LIST\r\nexport default class DeleteList_Transaction extends jsTPS_Transaction {\r\n    constructor(initApp,thisItem) {\r\n        super();\r\n        this.app = initApp;\r\n        this.item = thisItem;\r\n    }\r\n\r\n    doTransaction() {\r\n        // MAKE A NEW ITEM\r\n        this.app.moveDown(this.item);\r\n    }\r\n\r\n    undoTransaction() {\r\n        this.app.moveUp(this.item);\r\n    }\r\n}","C:\\hw2\\src\\CloseItem_Transaction.js",["118"],"'use strict'\r\n\r\n// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport { jsTPS_Transaction } from \"./common/jsTPS.js\"\r\n\r\n// THIS TRANSACTION IS FOR ADDING A NEW ITEM TO A TODO LIST\r\nexport default class CloseItem_Transaction extends jsTPS_Transaction {\r\n    constructor(initApp,thisItem) {\r\n        super();\r\n        this.app = initApp;\r\n        this.item = thisItem;\r\n    }\r\n\r\n    doTransaction() {\r\n        this.index = this.app.closeItem(this.item);\r\n    }\r\n\r\n    undoTransaction() {\r\n        let thisList = this.app.state.currentList;\r\n        thisList.items.splice(this.index,0,this.item);\r\n        this.app.setState({\r\n        toDoLists: this.app.state.toDoLists,\r\n        currentList: thisList,\r\n        nextListId: this.app.state.nextListId\r\n        },this.afterToDoListsChangeComplete);\r\n    }\r\n}","C:\\hw2\\src\\components\\TaskForm.js",["119"],"import React, { Component } from 'react'\r\n\r\nclass TaskForm extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.state = {value: this.props.task};\r\n    }\r\n  \r\n    handleChange(event) {\r\n      this.props.changeTaskCallBack(this.props.itemChanged,event.target.value,this.state.value);\r\n      this.setState({value: event.target.value});\r\n    }\r\n\r\n\r\n    render() {\r\n      return (\r\n            <input className=\"task-input\" type=\"text\" value={this.props.task} onChange={this.handleChange} />\r\n      );\r\n    }\r\n  }\r\n  export default TaskForm;","C:\\hw2\\src\\ChangeTask_Transaction.js",["120"],"'use strict'\r\n\r\n// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport { jsTPS_Transaction } from \"./common/jsTPS.js\"\r\n\r\n// THIS TRANSACTION IS FOR ADDING A NEW ITEM TO A TODO LIST\r\nexport default class ChangeTask_Transaction extends jsTPS_Transaction {\r\n    constructor(initApp,thisItem,thisNewTask,thisOldTask) {\r\n        super();\r\n        this.app = initApp;\r\n        this.item = thisItem;\r\n        this.newTask = thisNewTask;\r\n        this.oldTask = thisOldTask;\r\n    }\r\n\r\n    doTransaction() {\r\n        let thisList = this.app.state.currentList;\r\n        let index = thisList.items.indexOf(this.item);\r\n        thisList.items[index].description = this.newTask;\r\n        console.log(thisList.items[index].description);\r\n        this.app.setState({\r\n            toDoLists: this.app.state.toDoLists,\r\n            currentList: thisList,\r\n            nextListId: this.app.state.nextListId\r\n            },this.afterToDoListsChangeComplete);\r\n    }\r\n\r\n    undoTransaction() {\r\n        let thisList = this.app.state.currentList;\r\n        let index = thisList.items.indexOf(this.item);\r\n        thisList.items[index].description = this.oldTask;\r\n        console.log(thisList.items[index].description);\r\n        this.app.setState({\r\n            toDoLists: this.app.state.toDoLists,\r\n            currentList: thisList,\r\n            nextListId: this.app.state.nextListId\r\n            },this.afterToDoListsChangeComplete);\r\n    }\r\n}","C:\\hw2\\src\\ChangeDate_Transaction.js",["121"],"'use strict'\r\n\r\n// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport { jsTPS_Transaction } from \"./common/jsTPS.js\"\r\n\r\n// THIS TRANSACTION IS FOR ADDING A NEW ITEM TO A TODO LIST\r\nexport default class ChangeDate_Transaction extends jsTPS_Transaction {\r\n    constructor(initApp,thisItem,thisNewDate,thisOldDate) {\r\n        super();\r\n        this.app = initApp;\r\n        this.item = thisItem;\r\n        this.newDate = thisNewDate;\r\n        this.oldDate = thisOldDate;\r\n    }\r\n\r\n    doTransaction() {\r\n        let thisList = this.app.state.currentList;\r\n        let index = thisList.items.indexOf(this.item);\r\n        thisList.items[index].due_date = this.newDate;\r\n        console.log(thisList.items[index].due_date);\r\n        this.app.setState({\r\n            toDoLists: this.app.state.toDoLists,\r\n            currentList: thisList,\r\n            nextListId: this.app.state.nextListId\r\n            },this.afterToDoListsChangeComplete);\r\n    }\r\n\r\n    undoTransaction() {\r\n        let thisList = this.app.state.currentList;\r\n        let index = thisList.items.indexOf(this.item);\r\n        thisList.items[index].due_date = this.oldDate;\r\n        console.log(thisList.items[index].due_date);\r\n        this.app.setState({\r\n            toDoLists: this.app.state.toDoLists,\r\n            currentList: thisList,\r\n            nextListId: this.app.state.nextListId\r\n            },this.afterToDoListsChangeComplete);\r\n    }\r\n}","C:\\hw2\\src\\components\\DateForm.js",["122"],"import React, { Component } from 'react'\r\n\r\nclass DateForm extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.state = {value: this.props.date};\r\n    }\r\n  \r\n    handleChange(event) {\r\n        console.log(this.state.value);\r\n      this.props.changeDateCallBack(this.props.itemChanged,event.target.value,this.state.value);\r\n      this.setState({value: event.target.value});\r\n    }\r\n\r\n\r\n    render() {\r\n      return (\r\n            <input className=\"date-input\" type=\"date\" value={this.props.date} onChange={this.handleChange} />\r\n      );\r\n    }\r\n  }\r\n  export default DateForm;","C:\\hw2\\src\\ChangeStatus_Transaction.js",["123"],"'use strict'\r\n\r\n// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport { jsTPS_Transaction } from \"./common/jsTPS.js\"\r\n\r\n// THIS TRANSACTION IS FOR ADDING A NEW ITEM TO A TODO LIST\r\nexport default class ChangeStatus_Transaction extends jsTPS_Transaction {\r\n    constructor(initApp,thisItem,thisNewStatus,thisOldStatus) {\r\n        super();\r\n        this.app = initApp;\r\n        this.item = thisItem;\r\n        this.newStatus = thisNewStatus;\r\n        this.oldStatus = thisOldStatus;\r\n    }\r\n\r\n    doTransaction() {\r\n        let thisList = this.app.state.currentList;\r\n        let index = thisList.items.indexOf(this.item);\r\n        thisList.items[index].status = this.newStatus;\r\n        console.log(thisList.items[index].status);\r\n        this.app.setState({\r\n            toDoLists: this.app.state.toDoLists,\r\n            currentList: thisList,\r\n            nextListId: this.app.state.nextListId\r\n            },this.afterToDoListsChangeComplete);\r\n    }\r\n\r\n    undoTransaction() {\r\n        let thisList = this.app.state.currentList;\r\n        let index = thisList.items.indexOf(this.item);\r\n        thisList.items[index].status = this.oldStatus;\r\n        console.log(thisList.items[index].status);\r\n        this.app.setState({\r\n            toDoLists: this.app.state.toDoLists,\r\n            currentList: thisList,\r\n            nextListId: this.app.state.nextListId\r\n            },this.afterToDoListsChangeComplete);\r\n    }\r\n}","C:\\hw2\\src\\components\\StatusForm.js",["124","125"],"import React, { Component } from 'react'\r\n\r\nclass StatusForm extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.state = {value: this.props.status};\r\n    }\r\n  \r\n    handleChange(event) {\r\n      this.props.changeStatusCallBack(this.props.itemChanged,event.target.value,this.state.value);\r\n      this.setState({value: event.target.value});\r\n    }\r\n\r\n\r\n    render() {\r\n        if(this.props.status==\"complete\"){\r\n            return (\r\n                <select className=\"status-complete\" value={this.props.status} onChange={this.handleChange}>\r\n                    <option value=\"complete\">Complete</option>\r\n                    <option value=\"incomplete\">Incomplete</option>\r\n                </select>\r\n          );\r\n        }\r\n        else{\r\n            return (\r\n                <select className=\"status-incomplete\" value={this.props.status} onChange={this.handleChange}>\r\n                    <option value=\"complete\">Complete</option>\r\n                    <option value=\"incomplete\">Incomplete</option>\r\n                </select>\r\n          );\r\n        }\r\n      \r\n    }\r\n  }\r\n  export default StatusForm;","C:\\hw2\\src\\components\\ListTitle.js",["126"],"import React, { Component } from 'react'\r\n\r\nclass ListTitle extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.state = {value: this.props.title};\r\n    }\r\n  \r\n    handleChange(event) {\r\n      this.props.changeTitle(event.target.value);\r\n      this.setState({value: event.target.value});\r\n    }\r\n\r\n\r\n    render() {\r\n      return (\r\n            <input className=\"todo-list-title\" type=\"text\" value={this.props.title} onChange={this.handleChange} />\r\n      );\r\n    }\r\n  }\r\n  export default ListTitle;",{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":19,"column":1,"nodeType":"133","messageId":"134","endLine":22,"endColumn":4},{"ruleId":"135","severity":1,"message":"136","line":134,"column":11,"nodeType":"137","messageId":"138","endLine":134,"endColumn":13},{"ruleId":"139","severity":1,"message":"140","line":138,"column":7,"nodeType":"141","messageId":"138","endLine":138,"endColumn":16},{"ruleId":"142","severity":1,"message":"143","line":146,"column":9,"nodeType":"144","messageId":"145","endLine":146,"endColumn":17},{"ruleId":"146","severity":1,"message":"147","line":5,"column":5,"nodeType":"148","messageId":"149","endLine":7,"endColumn":6},{"ruleId":"146","severity":1,"message":"147","line":12,"column":5,"nodeType":"148","messageId":"149","endLine":14,"endColumn":6},{"ruleId":"135","severity":1,"message":"136","line":24,"column":41,"nodeType":"137","messageId":"138","endLine":24,"endColumn":43},{"ruleId":"146","severity":1,"message":"147","line":7,"column":5,"nodeType":"148","messageId":"149","endLine":9,"endColumn":6},{"ruleId":"150","severity":1,"message":"151","line":1,"column":1,"nodeType":"152","messageId":"153","endLine":1,"endColumn":13,"fix":"154"},{"ruleId":"155","severity":1,"message":"156","line":194,"column":29,"nodeType":"157","messageId":"158","endLine":194,"endColumn":40},{"ruleId":"142","severity":1,"message":"159","line":37,"column":13,"nodeType":"144","messageId":"145","endLine":37,"endColumn":23},{"ruleId":"135","severity":1,"message":"160","line":38,"column":29,"nodeType":"137","messageId":"138","endLine":38,"endColumn":31},{"ruleId":"135","severity":1,"message":"160","line":54,"column":33,"nodeType":"137","messageId":"138","endLine":54,"endColumn":35},{"ruleId":"135","severity":1,"message":"160","line":24,"column":36,"nodeType":"137","messageId":"138","endLine":24,"endColumn":38},{"ruleId":"150","severity":1,"message":"151","line":1,"column":1,"nodeType":"152","messageId":"153","endLine":1,"endColumn":13,"fix":"161"},{"ruleId":"150","severity":1,"message":"151","line":1,"column":1,"nodeType":"152","messageId":"153","endLine":1,"endColumn":13,"fix":"162"},{"ruleId":"150","severity":1,"message":"151","line":1,"column":1,"nodeType":"152","messageId":"153","endLine":1,"endColumn":13,"fix":"163"},{"ruleId":"150","severity":1,"message":"151","line":1,"column":1,"nodeType":"152","messageId":"153","endLine":1,"endColumn":13,"fix":"164"},{"ruleId":"142","severity":1,"message":"165","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},{"ruleId":"150","severity":1,"message":"151","line":1,"column":1,"nodeType":"152","messageId":"153","endLine":1,"endColumn":13,"fix":"166"},{"ruleId":"150","severity":1,"message":"151","line":1,"column":1,"nodeType":"152","messageId":"153","endLine":1,"endColumn":13,"fix":"167"},{"ruleId":"142","severity":1,"message":"165","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},{"ruleId":"150","severity":1,"message":"151","line":1,"column":1,"nodeType":"152","messageId":"153","endLine":1,"endColumn":13,"fix":"168"},{"ruleId":"142","severity":1,"message":"165","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},{"ruleId":"135","severity":1,"message":"160","line":17,"column":29,"nodeType":"137","messageId":"138","endLine":17,"endColumn":31},{"ruleId":"142","severity":1,"message":"165","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-dupe-keys","Duplicate key 'toDoLists'.","ObjectExpression","no-unused-vars","'thisList' is assigned a value but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"171","text":"172"},"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'statusType' is assigned a value but never used.","Expected '===' and instead saw '=='.",{"range":"173","text":"172"},{"range":"174","text":"172"},{"range":"175","text":"172"},{"range":"176","text":"172"},"'Component' is defined but never used.",{"range":"177","text":"172"},{"range":"178","text":"172"},{"range":"179","text":"172"},"no-global-assign","no-unsafe-negation",[0,12],"",[0,12],[0,12],[0,12],[0,12],[0,12],[0,12],[0,12]]