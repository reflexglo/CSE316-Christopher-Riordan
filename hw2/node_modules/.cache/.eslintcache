[{"C:\\hw2\\src\\index.js":"1","C:\\hw2\\src\\App.js":"2","C:\\hw2\\src\\reportWebVitals.js":"3","C:\\hw2\\src\\components\\Navbar.js":"4","C:\\hw2\\src\\components\\Workspace.js":"5","C:\\hw2\\src\\components\\LeftSidebar.js":"6","C:\\hw2\\src\\common\\jsTPS.js":"7","C:\\hw2\\src\\components\\ToDoItem.js":"8","C:\\hw2\\src\\components\\ListLink.js":"9","C:\\hw2\\src\\AddNewItem_Transaction.js":"10","C:\\hw2\\src\\AddNewList_Transaction.js":"11","C:\\hw2\\src\\DeleteList_Transaction.js":"12","C:\\hw2\\src\\CloseList_Transaction.js":"13","C:\\hw2\\src\\MoveUp_Transaction.js":"14","C:\\hw2\\src\\MoveDown_Transaction.js":"15","C:\\hw2\\src\\CloseItem_Transaction.js":"16","C:\\hw2\\src\\components\\TaskForm.js":"17","C:\\hw2\\src\\ChangeTask_Transaction.js":"18","C:\\hw2\\src\\ChangeDate_Transaction.js":"19","C:\\hw2\\src\\components\\DateForm.js":"20","C:\\hw2\\src\\ChangeStatus_Transaction.js":"21","C:\\hw2\\src\\components\\StatusForm.js":"22"},{"size":557,"mtime":1615306827219,"results":"23","hashOfConfig":"24"},{"size":9836,"mtime":1615476423210,"results":"25","hashOfConfig":"24"},{"size":375,"mtime":1615306827219,"results":"26","hashOfConfig":"24"},{"size":431,"mtime":1615306827216,"results":"27","hashOfConfig":"24"},{"size":2939,"mtime":1615477650459,"results":"28","hashOfConfig":"24"},{"size":1529,"mtime":1615306827215,"results":"29","hashOfConfig":"24"},{"size":6712,"mtime":1615306827215,"results":"30","hashOfConfig":"24"},{"size":5075,"mtime":1615477508016,"results":"31","hashOfConfig":"24"},{"size":952,"mtime":1615306827215,"results":"32","hashOfConfig":"24"},{"size":824,"mtime":1615409880965,"results":"33","hashOfConfig":"24"},{"size":870,"mtime":1615409926711,"results":"34","hashOfConfig":"24"},{"size":884,"mtime":1615410828028,"results":"35","hashOfConfig":"24"},{"size":619,"mtime":1615411233510,"results":"36","hashOfConfig":"24"},{"size":568,"mtime":1615411563316,"results":"37","hashOfConfig":"24"},{"size":568,"mtime":1615411794768,"results":"38","hashOfConfig":"24"},{"size":825,"mtime":1615412362341,"results":"39","hashOfConfig":"24"},{"size":625,"mtime":1615437041755,"results":"40","hashOfConfig":"24"},{"size":1444,"mtime":1615436986101,"results":"41","hashOfConfig":"24"},{"size":1432,"mtime":1615475309970,"results":"42","hashOfConfig":"24"},{"size":625,"mtime":1615475391019,"results":"43","hashOfConfig":"24"},{"size":1442,"mtime":1615476529599,"results":"44","hashOfConfig":"24"},{"size":1195,"mtime":1615476756130,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"ym0iot",{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\hw2\\src\\index.js",[],["103","104"],"C:\\hw2\\src\\App.js",["105","106","107"],"C:\\hw2\\src\\reportWebVitals.js",[],"C:\\hw2\\src\\components\\Navbar.js",["108"],"// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport React, { Component } from 'react'\r\n\r\nclass Navbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"navbar\">\r\n                <div id=\"title-div\">\r\n                    Todo Tracker\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","C:\\hw2\\src\\components\\Workspace.js",["109"],"C:\\hw2\\src\\components\\LeftSidebar.js",["110"],"// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport React, { Component } from 'react';\r\nimport ListLink from './ListLink'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\n\r\nclass LeftSidebar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleAddNewList = () => {\r\n        this.props.addNewListCallback();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"left-sidebar\">\r\n                <div id=\"left-sidebar-header\" class=\"section-header\">\r\n                    <span class=\"left-sidebar-header-text\">Todolists</span>\r\n                    <span class=\"left-sidebar-controls\" id=\"add-undo-redo-box\">\r\n                        <AddBox \r\n                            id=\"add-list-button\"\r\n                            className=\"material-icons todo_button\"\r\n                            onClick={this.handleAddNewList} />\r\n                    </span>\r\n                </div>\r\n                <div id=\"todo-lists-list\">\r\n                {\r\n                    this.props.toDoLists.map((toDoList) => (\r\n                        <ListLink\r\n                            key={toDoList.id}\r\n                            toDoList={toDoList}                                // PASS THE LIST TO THE CHILDREN\r\n                            loadToDoListCallback={this.props.loadToDoListCallback} />  // PASS THE CALLBACK TO THE CHILDREN\r\n                    ))\r\n                }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LeftSidebar;","C:\\hw2\\src\\common\\jsTPS.js",["111","112"],"'use strict'\r\n\r\n/**\r\n * jsTPS_Transaction\r\n * \r\n * This provides the basic structure for a transaction class. Note to use\r\n * jsTPS one should create objects that define these two methods, doTransaction\r\n * and undoTransaction, which will update the application state accordingly.\r\n * \r\n * @author THE McKilla Gorilla (accept no imposters)\r\n * @version 1.0\r\n */\r\nexport class jsTPS_Transaction {\r\n    /**\r\n     * This method is called by jTPS when a transaction is executed.\r\n     */\r\n    doTransaction() {\r\n        console.log(\"doTransaction - MISSING IMPLEMENTATION\");\r\n    }\r\n    \r\n    /**\r\n     * This method is called by jTPS when a transaction is undone.\r\n     */\r\n    undoTransaction() {\r\n        console.log(\"undoTransaction - MISSING IMPLEMENTATION\");\r\n    }\r\n}\r\n\r\n/**\r\n * jsTPS\r\n * \r\n * This class serves as the Transaction Processing System. Note that it manages\r\n * a stack of jsTPS_Transaction objects, each of which know how to do or undo\r\n * state changes for the given application. Note that this TPS is not platform\r\n * specific as it is programmed in raw JavaScript.\r\n */\r\nexport default class jsTPS {\r\n    constructor() {\r\n        // THE TRANSACTION STACK\r\n        this.transactions = [];\r\n\r\n        // THE TOTAL NUMBER OF TRANSACTIONS ON THE STACK,\r\n        // INCLUDING THOSE THAT MAY HAVE ALREADY BEEN UNDONE\r\n        this.numTransactions = 0;\r\n\r\n        // THE INDEX OF THE MOST RECENT TRANSACTION, NOTE THAT\r\n        // THIS MAY BE IN THE MIDDLE OF THE TRANSACTION STACK\r\n        // IF SOME TRANSACTIONS ON THE STACK HAVE BEEN UNDONE\r\n        // AND STILL COULD BE REDONE.\r\n        this.mostRecentTransaction = -1;\r\n\r\n        // THESE STATE VARIABLES ARE TURNED ON AND OFF WHILE\r\n        // TRANSACTIONS ARE DOING THEIR WORK SO AS TO HELP\r\n        // MANAGE CONCURRENT UPDATES\r\n        this.performingDo = false;\r\n        this.performingUndo = false;\r\n    }\r\n\r\n    /**\r\n     * isPerformingDo\r\n     * \r\n     * Accessor method for getting a boolean representing whether or not\r\n     * a transaction is currently in the midst of a do/redo operation.\r\n     */\r\n    isPerformingDo() {\r\n        return this.performingDo;\r\n    }\r\n\r\n    /**\r\n     * isPerformingUndo\r\n     * \r\n     * Accessor method for getting a boolean representing whether or not\r\n     * a transaction is currently in the midst of an undo operation.\r\n     */\r\n    isPerformingUndo() {\r\n        return this.performingUndo;\r\n    }\r\n\r\n    /**\r\n     * getSize\r\n     * \r\n     * Accessor method for getting the number of transactions on the stack.\r\n     */\r\n    getSize() {\r\n        return this.transactions.length;\r\n    }\r\n\r\n    /**\r\n     * getRedoSize\r\n     * \r\n     * Method for getting the total number of transactions on the stack\r\n     * that can possibly be redone.\r\n     */\r\n    getRedoSize() {\r\n        return this.getSize() - this.mostRecentTransaction - 1;\r\n    }\r\n\r\n    /**\r\n     * getUndoSize\r\n     * \r\n     * Method for getting the total number of transactions on the stack\r\n     * that can possible be undone.\r\n     */\r\n    getUndoSize() {\r\n        return this.mostRecentTransaction + 1;\r\n    }\r\n\r\n    /**\r\n     * hasTransactionToRedo\r\n     * \r\n     * Method for getting a boolean representing whether or not\r\n     * there are transactions on the stack that can be redone.\r\n     */\r\n    hasTransactionToRedo() {\r\n        return (this.mostRecentTransaction+1) < this.numTransactions;\r\n    }\r\n\r\n    /**\r\n     * hasTransactionToUndo\r\n     * \r\n     * Method for getting a boolean representing whehter or not\r\n     * there are transactions on the stack that can be undone.\r\n     */\r\n    hasTransactionToUndo() {\r\n        return this.mostRecentTransaction >= 0;\r\n    }\r\n\r\n    /**\r\n     * addTransaction\r\n     * \r\n     * Method for adding a transaction to the TPS stack, note it\r\n     * also then does the transaction.\r\n     * \r\n     * @param {jsTPS_Transaction} transaction Transaction to add to the stack and do.\r\n     */\r\n    addTransaction(transaction) {\r\n        // ARE WE BRANCHING?\r\n        if ((this.mostRecentTransaction < 0) \r\n            || (this.mostRecentTransaction < (this.transactions.length - 1))) {\r\n                for (let i = this.transactions.length - 1; i > this.mostRecentTransaction; i--) {\r\n                    this.transactions.splice(i, 1);\r\n                }\r\n                this.numTransactions = this.mostRecentTransaction + 2;\r\n        }\r\n        else {\r\n            this.numTransactions++;\r\n        }\r\n\r\n        // ADD THE TRANSACTION\r\n        this.transactions[this.mostRecentTransaction+1] = transaction;\r\n\r\n        // AND EXECUTE IT\r\n        this.doTransaction();\r\n    }\r\n\r\n    /**\r\n     * doTransaction\r\n     * \r\n     * Does the current transaction on the stack and advances the transaction\r\n     * counter. Note this function may be invoked as a result of either adding\r\n     * a transaction (which also does it), or redoing a transaction.\r\n     */\r\n    doTransaction() {\r\n        if (this.hasTransactionToRedo()) {\r\n            this.performingDo = true;\r\n            let transaction = this.transactions[this.mostRecentTransaction+1];\r\n            transaction.doTransaction();\r\n            this.mostRecentTransaction++;\r\n            this.performingDo = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This function gets the most recently executed transaction on the \r\n     * TPS stack and undoes it, moving the TPS counter accordingly.\r\n     */\r\n    undoTransaction() {\r\n        if (this.hasTransactionToUndo()) {\r\n            this.performingUndo = true;\r\n            let transaction = this.transactions[this.mostRecentTransaction];\r\n            transaction.undoTransaction();\r\n            this.mostRecentTransaction--;\r\n            this.performingUndo = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * clearAllTransactions\r\n     * \r\n     * Removes all the transactions from the TPS, leaving it with none.\r\n     */\r\n    clearAllTransactions() {\r\n        // REMOVE ALL THE TRANSACTIONS\r\n        this.transactions = new Array();\r\n        \r\n        // MAKE SURE TO RESET THE LOCATION OF THE\r\n        // TOP OF THE TPS STACK TOO\r\n        this.mostRecentTransaction = -1;      \r\n        this.numTransactions = 0; \r\n    }\r\n\r\n    /**\r\n     * toString\r\n     * \r\n     * Builds and returns a textual represention of the full TPS and its stack.\r\n     */\r\n    toString() {        \r\n        let text = \"--Number of Transactions: \" + this.numTransactions + \"\\n\";\r\n        text += \"--Current Index on Stack: \" + this.mostRecentTransaction + \"\\n\";\r\n        text += \"--Current Transaction Stack:\\n\";\r\n        for (let i = 0; i <= this.mostRecentTransaction; i++) {\r\n            let jT = this.transactions[i];\r\n            text += \"----\" + jT.toString() + \"\\n\";\r\n        }\r\n        return text;        \r\n    }\r\n}","C:\\hw2\\src\\components\\ToDoItem.js",["113","114","115"],"C:\\hw2\\src\\components\\ListLink.js",[],"C:\\hw2\\src\\AddNewItem_Transaction.js",["116"],"'use strict'\r\n\r\n// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport { jsTPS_Transaction } from \"./common/jsTPS.js\"\r\n\r\n// THIS TRANSACTION IS FOR ADDING A NEW ITEM TO A TODO LIST\r\nexport default class AddNewItem_Transaction extends jsTPS_Transaction {\r\n    constructor(initApp) {\r\n        super();\r\n        this.app = initApp;\r\n    }\r\n\r\n    doTransaction() {\r\n        this.itemAdded = this.app.addNewItem();\r\n    }\r\n\r\n    undoTransaction() {\r\n        let thisList = this.app.state.currentList;\r\n        let ind = thisList.items.indexOf(this.itemAdded);\r\n        thisList.items.splice(ind,1);\r\n        this.app.setState({\r\n        toDoLists: this.app.state.toDoLists,\r\n        currentList: thisList,\r\n        nextListId: this.app.state.nextListId\r\n        },this.afterToDoListsChangeComplete);\r\n    }\r\n}","C:\\hw2\\src\\AddNewList_Transaction.js",["117","118"],"'use strict'\r\n\r\n// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport { jsTPS_Transaction } from \"./common/jsTPS.js\"\r\n\r\n// THIS TRANSACTION IS FOR ADDING A NEW ITEM TO A TODO LIST\r\nexport default class AddNewList_Transaction extends jsTPS_Transaction {\r\n    constructor(initApp) {\r\n        super();\r\n        this.app = initApp;\r\n    }\r\n\r\n    doTransaction() {\r\n        // MAKE A NEW ITEM\r\n        this.listAdded = this.app.addNewList();\r\n    }\r\n\r\n    undoTransaction() {\r\n        let allLists = this.app.state.toDoLists;\r\n        let ind = allLists.indexOf(this.listAdded);\r\n        allLists.splice(ind,1);\r\n        this.app.setState({\r\n        toDoLists: this.app.state.toDoLists,\r\n        currentList: {items:[]},\r\n        toDoLists: allLists,\r\n        nextListId: this.app.state.nextListId\r\n        },this.afterToDoListsChangeComplete);\r\n    }\r\n}","C:\\hw2\\src\\DeleteList_Transaction.js",["119","120"],"'use strict'\r\n\r\n// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport { jsTPS_Transaction } from \"./common/jsTPS.js\"\r\n\r\n// THIS TRANSACTION IS FOR ADDING A NEW ITEM TO A TODO LIST\r\nexport default class DeleteList_Transaction extends jsTPS_Transaction {\r\n    constructor(initApp) {\r\n        super();\r\n        this.app = initApp;\r\n    }\r\n\r\n    doTransaction() {\r\n        // MAKE A NEW ITEM\r\n        this.listDeleted = this.app.deleteList();\r\n    }\r\n\r\n    undoTransaction() {\r\n        let allLists = this.app.state.toDoLists;\r\n        allLists.push(this.listDeleted);\r\n        this.app.setState({\r\n        toDoLists: this.app.state.toDoLists,\r\n        currentList: this.listDeleted,\r\n        toDoLists: allLists,\r\n        nextListId: this.app.state.nextListId\r\n        },this.afterToDoListsChangeComplete);\r\n        this.app.loadToDoList(this.listDeleted);\r\n    }\r\n}","C:\\hw2\\src\\CloseList_Transaction.js",["121"],"'use strict'\r\n\r\n// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport { jsTPS_Transaction } from \"./common/jsTPS.js\"\r\n\r\n// THIS TRANSACTION IS FOR ADDING A NEW ITEM TO A TODO LIST\r\nexport default class DeleteList_Transaction extends jsTPS_Transaction {\r\n    constructor(initApp) {\r\n        super();\r\n        this.app = initApp;\r\n    }\r\n\r\n    doTransaction() {\r\n        // MAKE A NEW ITEM\r\n        this.listClosed = this.app.closeList();\r\n    }\r\n\r\n    undoTransaction() {\r\n        this.app.setState({\r\n            currentList: this.listClosed\r\n        },this.afterToDoListsChangeComplete);\r\n    }\r\n}","C:\\hw2\\src\\MoveUp_Transaction.js",["122"],"'use strict'\r\n\r\n// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport { jsTPS_Transaction } from \"./common/jsTPS.js\"\r\n\r\n// THIS TRANSACTION IS FOR ADDING A NEW ITEM TO A TODO LIST\r\nexport default class DeleteList_Transaction extends jsTPS_Transaction {\r\n    constructor(initApp,thisItem) {\r\n        super();\r\n        this.app = initApp;\r\n        this.item = thisItem;\r\n    }\r\n\r\n    doTransaction() {\r\n        // MAKE A NEW ITEM\r\n        this.app.moveUp(this.item);\r\n    }\r\n\r\n    undoTransaction() {\r\n        this.app.moveDown(this.item);\r\n    }\r\n}","C:\\hw2\\src\\MoveDown_Transaction.js",["123"],"'use strict'\r\n\r\n// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport { jsTPS_Transaction } from \"./common/jsTPS.js\"\r\n\r\n// THIS TRANSACTION IS FOR ADDING A NEW ITEM TO A TODO LIST\r\nexport default class DeleteList_Transaction extends jsTPS_Transaction {\r\n    constructor(initApp,thisItem) {\r\n        super();\r\n        this.app = initApp;\r\n        this.item = thisItem;\r\n    }\r\n\r\n    doTransaction() {\r\n        // MAKE A NEW ITEM\r\n        this.app.moveDown(this.item);\r\n    }\r\n\r\n    undoTransaction() {\r\n        this.app.moveUp(this.item);\r\n    }\r\n}","C:\\hw2\\src\\CloseItem_Transaction.js",["124"],"'use strict'\r\n\r\n// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport { jsTPS_Transaction } from \"./common/jsTPS.js\"\r\n\r\n// THIS TRANSACTION IS FOR ADDING A NEW ITEM TO A TODO LIST\r\nexport default class CloseItem_Transaction extends jsTPS_Transaction {\r\n    constructor(initApp,thisItem) {\r\n        super();\r\n        this.app = initApp;\r\n        this.item = thisItem;\r\n    }\r\n\r\n    doTransaction() {\r\n        this.index = this.app.closeItem(this.item);\r\n    }\r\n\r\n    undoTransaction() {\r\n        let thisList = this.app.state.currentList;\r\n        thisList.items.splice(this.index,0,this.item);\r\n        this.app.setState({\r\n        toDoLists: this.app.state.toDoLists,\r\n        currentList: thisList,\r\n        nextListId: this.app.state.nextListId\r\n        },this.afterToDoListsChangeComplete);\r\n    }\r\n}","C:\\hw2\\src\\components\\TaskForm.js",["125"],"import React, { Component } from 'react'\r\n\r\nclass TaskForm extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.state = {value: this.props.task};\r\n    }\r\n  \r\n    handleChange(event) {\r\n      this.props.changeTaskCallBack(this.props.itemChanged,event.target.value,this.state.value);\r\n      this.setState({value: event.target.value});\r\n    }\r\n\r\n\r\n    render() {\r\n      return (\r\n            <input className=\"task-input\" type=\"text\" value={this.props.task} onChange={this.handleChange} />\r\n      );\r\n    }\r\n  }\r\n  export default TaskForm;","C:\\hw2\\src\\ChangeTask_Transaction.js",["126"],"'use strict'\r\n\r\n// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport { jsTPS_Transaction } from \"./common/jsTPS.js\"\r\n\r\n// THIS TRANSACTION IS FOR ADDING A NEW ITEM TO A TODO LIST\r\nexport default class ChangeTask_Transaction extends jsTPS_Transaction {\r\n    constructor(initApp,thisItem,thisNewTask,thisOldTask) {\r\n        super();\r\n        this.app = initApp;\r\n        this.item = thisItem;\r\n        this.newTask = thisNewTask;\r\n        this.oldTask = thisOldTask;\r\n    }\r\n\r\n    doTransaction() {\r\n        let thisList = this.app.state.currentList;\r\n        let index = thisList.items.indexOf(this.item);\r\n        thisList.items[index].description = this.newTask;\r\n        console.log(thisList.items[index].description);\r\n        this.app.setState({\r\n            toDoLists: this.app.state.toDoLists,\r\n            currentList: thisList,\r\n            nextListId: this.app.state.nextListId\r\n            },this.afterToDoListsChangeComplete);\r\n    }\r\n\r\n    undoTransaction() {\r\n        let thisList = this.app.state.currentList;\r\n        let index = thisList.items.indexOf(this.item);\r\n        thisList.items[index].description = this.oldTask;\r\n        console.log(thisList.items[index].description);\r\n        this.app.setState({\r\n            toDoLists: this.app.state.toDoLists,\r\n            currentList: thisList,\r\n            nextListId: this.app.state.nextListId\r\n            },this.afterToDoListsChangeComplete);\r\n    }\r\n}","C:\\hw2\\src\\ChangeDate_Transaction.js",["127"],"C:\\hw2\\src\\components\\DateForm.js",["128"],"C:\\hw2\\src\\ChangeStatus_Transaction.js",["129"],"C:\\hw2\\src\\components\\StatusForm.js",["130","131"],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":22,"column":1,"nodeType":"138","messageId":"139","endLine":25,"endColumn":4},{"ruleId":"140","severity":1,"message":"141","line":137,"column":11,"nodeType":"142","messageId":"143","endLine":137,"endColumn":13},{"ruleId":"144","severity":1,"message":"145","line":141,"column":7,"nodeType":"146","messageId":"143","endLine":141,"endColumn":16},{"ruleId":"147","severity":1,"message":"148","line":5,"column":5,"nodeType":"149","messageId":"150","endLine":7,"endColumn":6},{"ruleId":"147","severity":1,"message":"148","line":11,"column":5,"nodeType":"149","messageId":"150","endLine":13,"endColumn":6},{"ruleId":"147","severity":1,"message":"148","line":7,"column":5,"nodeType":"149","messageId":"150","endLine":9,"endColumn":6},{"ruleId":"151","severity":1,"message":"152","line":1,"column":1,"nodeType":"153","messageId":"154","endLine":1,"endColumn":13,"fix":"155"},{"ruleId":"156","severity":1,"message":"157","line":194,"column":29,"nodeType":"158","messageId":"159","endLine":194,"endColumn":40},{"ruleId":"160","severity":1,"message":"161","line":37,"column":13,"nodeType":"162","messageId":"163","endLine":37,"endColumn":23},{"ruleId":"140","severity":1,"message":"164","line":38,"column":29,"nodeType":"142","messageId":"143","endLine":38,"endColumn":31},{"ruleId":"140","severity":1,"message":"164","line":54,"column":33,"nodeType":"142","messageId":"143","endLine":54,"endColumn":35},{"ruleId":"151","severity":1,"message":"152","line":1,"column":1,"nodeType":"153","messageId":"154","endLine":1,"endColumn":13,"fix":"165"},{"ruleId":"151","severity":1,"message":"152","line":1,"column":1,"nodeType":"153","messageId":"154","endLine":1,"endColumn":13,"fix":"166"},{"ruleId":"144","severity":1,"message":"145","line":25,"column":9,"nodeType":"146","messageId":"143","endLine":25,"endColumn":18},{"ruleId":"151","severity":1,"message":"152","line":1,"column":1,"nodeType":"153","messageId":"154","endLine":1,"endColumn":13,"fix":"167"},{"ruleId":"144","severity":1,"message":"145","line":24,"column":9,"nodeType":"146","messageId":"143","endLine":24,"endColumn":18},{"ruleId":"151","severity":1,"message":"152","line":1,"column":1,"nodeType":"153","messageId":"154","endLine":1,"endColumn":13,"fix":"168"},{"ruleId":"151","severity":1,"message":"152","line":1,"column":1,"nodeType":"153","messageId":"154","endLine":1,"endColumn":13,"fix":"169"},{"ruleId":"151","severity":1,"message":"152","line":1,"column":1,"nodeType":"153","messageId":"154","endLine":1,"endColumn":13,"fix":"170"},{"ruleId":"151","severity":1,"message":"152","line":1,"column":1,"nodeType":"153","messageId":"154","endLine":1,"endColumn":13,"fix":"171"},{"ruleId":"160","severity":1,"message":"172","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":26},{"ruleId":"151","severity":1,"message":"152","line":1,"column":1,"nodeType":"153","messageId":"154","endLine":1,"endColumn":13,"fix":"173"},{"ruleId":"151","severity":1,"message":"152","line":1,"column":1,"nodeType":"153","messageId":"154","endLine":1,"endColumn":13,"fix":"174"},{"ruleId":"160","severity":1,"message":"172","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":26},{"ruleId":"151","severity":1,"message":"152","line":1,"column":1,"nodeType":"153","messageId":"154","endLine":1,"endColumn":13,"fix":"175"},{"ruleId":"160","severity":1,"message":"172","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":26},{"ruleId":"140","severity":1,"message":"164","line":17,"column":29,"nodeType":"142","messageId":"143","endLine":17,"endColumn":31},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-dupe-keys","Duplicate key 'toDoLists'.","ObjectExpression","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"178","text":"179"},"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-unused-vars","'statusType' is assigned a value but never used.","Identifier","unusedVar","Expected '===' and instead saw '=='.",{"range":"180","text":"179"},{"range":"181","text":"179"},{"range":"182","text":"179"},{"range":"183","text":"179"},{"range":"184","text":"179"},{"range":"185","text":"179"},{"range":"186","text":"179"},"'Component' is defined but never used.",{"range":"187","text":"179"},{"range":"188","text":"179"},{"range":"189","text":"179"},"no-global-assign","no-unsafe-negation",[0,12],"",[0,12],[0,12],[0,12],[0,12],[0,12],[0,12],[0,12],[0,12],[0,12],[0,12]]